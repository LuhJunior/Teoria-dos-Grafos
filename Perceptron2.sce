function Net()
    N0E1 = [1 1 1 1 1 1 1 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 1 1 1 1 1 1 1]
    N0E2 = [1 1 1 1 1 1 1 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 1 1 1 1 1 1 1]
    N0E3 = [1 1 1 1 1 1 1 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 1 1 1 1 1 1 1]
    N0E4 = [1 1 1 1 1 1 1 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 1 1 1 1 1 1 1]
    N0E5 = [1 1 1 1 1 1 1 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 0 0 0 0 0 0 1...
            1 1 1 1 1 1 1 1]                                
    N1E1 = [0 0 0 0 0 1 0 0...
            0 0 0 0 1 1 0 0...
            0 0 0 1 0 1 0 0...
            0 0 0 0 0 1 0 0...
            0 0 0 0 0 1 0 0...
            0 0 0 0 0 1 0 0...
            0 0 0 0 0 1 0 0...
            0 0 0 1 1 1 1 1]
    N1E2 = [0 0 0 0 1 0 0 0...
            0 0 0 1 1 0 0 0...
            0 0 0 0 1 0 0 0...
            0 0 0 0 1 0 0 0...
            0 0 0 0 1 0 0 0...
            0 0 0 0 1 0 0 0...
            0 0 0 0 1 0 0 0...
            0 0 0 1 1 1 1 0]
    N1E3 = [0 0 0 1 0 0 0 0...
            0 0 1 1 0 0 0 0...
            0 0 0 1 0 0 0 0...
            0 0 0 1 0 0 0 0...
            0 0 0 1 0 0 0 0...
            0 0 0 1 0 0 0 0...
            0 0 0 1 0 0 0 0...
            0 0 1 1 1 0 0 0]
    N1E4 = [0 0 0 0 0 1 0 0...
            0 0 0 0 1 1 0 0...
            0 0 0 1 0 1 0 0...
            0 0 0 0 0 1 0 0...
            0 0 0 0 0 1 0 0...
            0 0 0 0 0 1 0 0...
            0 0 0 0 0 1 0 0...
            0 0 0 1 1 1 1 1]
    N1E5 = [0 0 0 0 0 0 0 0...
            0 0 0 0 1 0 0 0...
            0 0 0 1 1 0 0 0...
            0 0 0 0 1 0 0 0...
            0 0 0 0 1 0 0 0...
            0 0 0 0 1 0 0 0...
            0 0 1 1 1 1 0 0...
            0 0 0 0 0 0 0 0]
    N2E1 = [1 1 1 1 1 1 1 1...
            0 0 0 0 0 0 0 1...
            0 0 0 0 0 0 0 1...
            0 0 0 0 0 0 0 1...
            1 1 1 1 1 1 1 1...
            1 0 0 0 0 0 0 0...
            1 0 0 0 0 0 0 0...
            1 1 1 1 1 1 1 1]
    N2E2 = [1 1 1 1 1 1 1 1...
            0 0 0 0 0 0 0 1...
            0 0 0 0 0 0 0 1...
            1 1 1 1 1 1 1 1...
            1 0 0 0 0 0 0 0...
            1 0 0 0 0 0 0 0...
            1 0 0 0 0 0 0 0...
            1 1 1 1 1 1 1 1]
    N2E3 = [1 1 1 1 1 1 1 1...
            0 0 0 0 0 0 0 1...
            0 0 0 0 0 0 0 1...
            1 1 1 1 1 1 1 1...
            1 0 0 0 0 0 0 0...
            1 0 0 0 0 0 0 0...
            1 1 1 1 1 1 1 1...
            0 0 0 0 0 0 0 0]
    N2E4 = [0 0 0 0 0 0 0 0...
            1 1 1 1 1 1 1 1...
            0 0 0 0 0 0 0 1...
            0 0 0 0 0 0 0 1...
            1 1 1 1 1 1 1 1...
            1 0 0 0 0 0 0 0...
            1 0 0 0 0 0 0 0...
            1 1 1 1 1 1 1 1]
    N2E5 = [0 0 0 0 0 0 0 0...
            0 1 1 1 1 1 1 1...
            0 0 0 0 0 0 0 1...
            0 0 0 0 0 0 0 1...
            0 1 1 1 1 1 1 1...
            0 1 0 0 0 0 0 0...
            0 1 1 1 1 1 1 1...
            0 0 0 0 0 0 0 0]
    N2E6 = [0 0 0 0 0 0 0 0...
            0 0 0 0 0 0 0 0...
            0 1 1 1 1 1 1 1...
            0 0 0 0 0 0 0 1...
            0 1 1 1 1 1 1 1...
            0 1 0 0 0 0 0 0...
            0 1 1 1 1 1 1 1...
            0 0 0 0 0 0 0 0]         
    N2E7 = [0 0 0 0 0 0 0 0...
            0 1 1 1 1 1 1 1...
            0 0 0 0 0 0 0 1...
            0 1 1 1 1 1 1 1...
            0 1 0 0 0 0 0 0...
            0 1 1 1 1 1 1 1...
            0 0 0 0 0 0 0 0...
            0 0 0 0 0 0 0 0]         
    N2E8 = [0 1 1 1 1 1 1 1...
            0 0 0 0 0 0 0 1...
            0 1 1 1 1 1 1 1...
            0 1 0 0 0 0 0 0...
            0 1 1 1 1 1 1 1...
            0 0 0 0 0 0 0 0...
            0 0 0 0 0 0 0 0...
            0 0 0 0 0 0 0 0]         
    N2E9 = [0 0 0 0 0 0 0 0...
            0 0 0 0 0 0 0 0...
            0 1 1 1 1 1 1 1...
            0 0 0 0 0 0 0 1...
            0 0 0 0 0 0 0 1...
            0 1 1 1 1 1 1 1...
            0 1 0 0 0 0 0 0...
            0 1 1 1 1 1 1 1]         
    N2E10 = [1 1 1 1 1 1 1 0...
             0 0 0 0 0 0 0 1...
             0 0 0 0 0 0 0 1...
             0 0 0 0 0 0 0 1...
             0 1 1 1 1 1 1 0...
             1 0 0 0 0 0 0 0...
             1 0 0 0 0 0 0 0...
             0 1 1 1 1 1 1 1]                                         
    N3E1 = [1 1 1...
            0 0 1...
            1 1 0...
            0 0 1...
            1 1 1]
    N3E2 = [1 1 0...
            0 0 1...
            1 1 1...
            0 0 1...
            1 1 0]
    N3E3 = [1 1 1...
            0 0 1...
            0 1 1...
            0 0 1...
            1 1 1]
    N3E4 = [1 1 1...
            0 0 1...
            1 0 1...
            0 0 1...
            1 1 1]        
    N3E5 = [1 1 1...
            0 0 1...
            1 1 1...
            0 0 1...
            0 1 1]                               
    N4E1 = [1 0 1...
            1 0 1...
            1 1 1...
            0 0 1...
            0 0 1]
    N4E2 = [0 0 0...
            1 0 1...
            1 1 1...
            0 0 1...
            0 0 1]        
    N4E3 = [0 0 0...
            1 0 1...
            1 1 1...
            0 0 1...
            0 0 0]        
    N4E4 = [1 0 1...
            1 0 1...
            0 1 1...
            0 0 1...
            0 0 1]        
    N4E5 = [1 0 1...
            1 0 1...
            0 1 0...
            0 0 1...
            0 0 0]        
    N5E1 = [1 1 1...
            1 0 0...
            1 1 1...
            0 0 1...
            1 1 1]
    N5E2 = [1 1 1...
            1 0 0...
            1 1 0...
            0 0 1...
            1 1 1]        
    N5E3 = [0 1 1...
            1 0 0...
            1 1 0...
            0 0 1...
            1 1 1]        
    N5E4 = [1 1 0...
            1 0 0...
            1 1 1...
            0 0 1...
            0 1 1]        
    N5E5 = [0 1 1...
            1 0 0...
            1 1 1...
            0 0 1...
            1 1 1]        
    N6E1 = [1 1 1...
            1 0 0...
            1 1 1...
            1 0 1...
            1 1 1]
    N6E2 = [1 1 0...
            1 0 0...
            1 1 1...
            1 0 1...
            1 1 1]        
    N6E3 = [1 1 1...
            1 0 0...
            0 1 0...
            1 0 1...
            0 1 0]        
    N6E4 = [0 1 1...
            1 0 0...
            1 1 1...
            1 0 1...
            1 1 1]        
    N6E5 = [0 1 1...
            1 0 0...
            1 0 1...
            0 0 0...
            1 0 1]        
    N7E1 = [1 1 1...
            0 0 1...
            1 1 1...
            0 0 1...
            0 0 1]
    N7E2 = [0 1 1...
            0 0 1...
            1 1 1...
            0 0 1...
            0 0 1]        
    N7E3 = [1 1 0...
            0 0 1...
            1 1 1...
            0 0 1...
            0 0 1]        
    N7E4 = [1 1 1...
            0 0 1...
            1 1 1...
            0 0 1...
            0 0 0]        
    N7E5 = [0 1 1...
            0 0 1...
            1 1 1...
            0 0 1...
            0 0 0]        
    N8E1 = [1 1 1...
            1 0 1...
            1 1 1...
            1 0 1...
            1 1 1]
    N9E1 = [1 1 1...
            1 0 1...
            1 1 1...
            0 0 1...
            1 1 1]
    alpha = .1
    b = 1
    saidas = [0 0 0 0
              0 0 0 0
              0 0 0 0
              0 0 0 0
              0 0 0 0
              0 0 0 1
              0 0 0 1
              0 0 0 1
              0 0 0 1
              0 0 0 1
              0 0 1 0
              0 0 1 0
              0 0 1 0
              0 0 1 0
              0 0 1 0
              0 0 1 0
              0 0 1 0
              0 0 1 0
              0 0 1 0
              0 0 1 0
              0 0 1 1
              0 0 1 1
              0 0 1 1
              0 0 1 1
              0 0 1 1
              0 1 0 0
              0 1 0 0
              0 1 0 0
              0 1 0 0
              0 1 0 0
              0 1 0 1
              0 1 0 1
              0 1 0 1
              0 1 0 1
              0 1 0 1
              0 1 1 0
              0 1 1 0
              0 1 1 0
              0 1 1 0
              0 1 1 0
              0 1 1 1
              0 1 1 1
              0 1 1 1
              0 1 1 1
              0 1 1 1]
    entradas = [N0E1 b;
                N0E2 b;
                N0E3 b;
                N0E4 b;
                N0E5 b;
                N1E1 b;
                N1E2 b;
                N1E3 b;
                N1E4 b;
                N1E5 b;
                N2E1 b;
                N2E2 b;
                N2E3 b;
                N2E4 b;
                N2E5 b;
                N2E6 b;
                N2E7 b;
                N2E8 b;
                N2E9 b;
                N2E10 b;]/*
                N3E1 b;
                N3E2 b;
                N3E3 b;
                N3E4 b;
                N3E5 b;
                N4E1 b;
                N4E2 b;
                N4E3 b;
                N4E4 b;
                N4E5 b;
                N5E1 b;
                N5E2 b;
                N5E3 b;
                N5E4 b;
                N5E5 b;
                N6E1 b;
                N6E2 b;
                N6E3 b;
                N6E4 b;
                N6E5 b;
                N7E1 b;
                N7E2 b;
                N7E3 b;
                N7E4 b;
                N7E5 b;]*/
    wL1 = ones(13, 65)
    wL = ones(4, 13)
    e = []
    for treinos=1:100
        for i=1:size(entradas)(1)
            for j=1:1000
                x = entradas(i, 1:$)'; //disp(x, 'x')
                at = saidas(i, 1:$)'; //disp(yt, 'yt')
                zL1 = wL1 * x;
                aL1 = sigmoid(zL1); //disp(a, 'a');
                zL = wL * aL1;
                aL = sigmoid(zL)
                E = (aL - at).^2;// disp(erro, "erro")
                dE = 2 * (aL - at)
                e = [e, sum(E)]
                gW = dE .* dsigmoid(zL) * aL1'
                //disp(wL'*dsigmoid(zL), "dsigmoid(zL)")
                gWL1 = wL' * dsigmoid(zL) .* dsigmoid(zL1) * x' //backpropagation
                //gb = erro * sigmoid(z)
                //g = [gW, gWL1];// disp(g, 'g')
                ng = norm(gW) + norm(gWL1)
                if ng==0 break end;//disp(ng, 'ng')
                //gW = gW/ng
                //gWL1 = gWL1/ng
                //gb = gb/ng
                wL1 = wL1 - alpha * gWL1
                wL = wL - alpha * gW
                //b = b - gb
            end
            //disp(aL, "final do treino")
            //disp(E, "erro")
        end
    end
    
    N0 = [1 1 1 1 0 1 1 1...
          1 0 0 0 0 0 0 1...
          1 0 0 0 0 0 0 1...
          0 0 0 0 0 0 0 1...
          1 0 0 0 0 0 0 0...
          1 0 0 0 0 0 0 1...
          1 0 0 0 0 0 0 1...
          1 1 1 1 0 1 1 1]
    N1 = [0 0 0 0 0 1 0 0...
          0 0 0 0 0 1 0 0...
          0 0 0 1 0 1 0 0...
          0 0 0 0 0 1 0 0...
          0 0 0 0 0 1 0 0...
          0 0 0 0 0 0 0 0...
          0 0 0 0 0 1 0 0...
          0 0 0 1 0 1 1 1]
    N2 = [0 1 1 1 1 1 1 1...
          0 0 0 0 0 0 0 1...
          0 0 0 0 0 0 0 1...
          0 0 0 0 0 0 0 1...
          0 1 1 1 1 1 1 1...
          1 0 0 0 0 0 0 0...
          1 0 0 0 0 0 0 0...
          1 1 1 0 1 1 1 1]
    N3 = [1 1 0...
          0 0 1...
          1 1 0...
          0 0 1...
          1 1 1 b]
    N4 = [1 0 0...
          1 0 1...
          1 1 1...
          0 0 0...
          0 0 1 b]
    N5 = [1 0 1...
          1 0 0...
          1 1 1...
          0 0 1...
          1 0 1 b]
    N6 = [0 1 1...
          1 0 0...
          1 1 1...
          1 0 1...
          1 1 1 b]
    N7 = [0 1 1...
          0 0 1...
          1 1 1...
          0 0 1...
          0 0 1 b]
    y = TestarEntrada([N0'; b], wL, wL1)
    v2Matriz(N0', 8, 8)
    disp(y', "O que reconheceu")
    if toDecimal(y) == 0 then
        disp("Ah miseravih")
    else
        disp("Errou, Errou feio, Errou rude")
    end
    y = TestarEntrada([N1'; b], wL, wL1)
    //disp(v2Matriz(N1, 8, 8), "Numero um")
    disp(y', "O que reconheceu")
    if toDecimal(y) == 1 then
        disp("Ah miseravih")
    else
        disp("Errou, Errou feio, Errou rude")
    end
    y = TestarEntrada([N2'; b], wL, wL1)
    //disp(v2Matriz(N2, 8, 8), "Numero dois")
    disp(y', "O que reconheceu")
    if toDecimal(y) == 2 then
        disp("Ah miseravih")
    else
        disp("Errou, Errou feio, Errou rude")
    end
    /*
    y = TestarEntrada(N3, vw1, vw2, vw3)
    disp(N3(1:15), "Numero tres")
    disp(y', "O que reconheceu")
    if sum(y'-N3y) < 1E-10 then
        disp("Ah miseravih")
    else
        disp("Errou, Errou feio, Errou rude")
    end
    y = TestarEntrada(N4, vw1, vw2, vw3)
    disp(N4(1:15), "Numero quatro")
    disp(y', "O que reconheceu")
    if sum(y'-N4y) < 1E-10 then
        disp("Ah miseravih")
    end
    y = TestarEntrada(N5, vw1, vw2, vw3)
    disp(N5(1:15), "Numero cinco")
    disp(y', "O que reconheceu")
    if sum(y'-N5y) < 1E-10 then
        disp("Ah miseravih")
    else
        disp("Errou, Errou feio, Errou rude")
    end
    y = TestarEntrada(N6, vw1, vw2, vw3)
    disp(N6(1:15), "Numero seis")
    disp(y', "O que reconheceu")
    if sum(y'-N6y) < 1E-10 then
        disp("Ah miseravih")
    else
        disp("Errou, Errou feio, Errou rude")
    end
    y = TestarEntrada(N7, vw1, vw2, vw3)
    disp(N7(1:15), "Numero sete")
    disp(y', "O que reconheceu")
    if sum(y'-N7y) < 1E-10 then
        disp("Ah miseravih")
    else
        disp("Errou, Errou feio, Errou rude")
    end
    */
    plot(e)
endfunction

function mm=v2Matriz(N, nlin, ncol)
 mm =zeros(nlin,ncol)
 kt=nlin*ncol
 if size(N,1)<> kt then
   disp('tamanhos incompativeis')
 end
 j=0
 for k=1:kt
    if(j>=ncol)
      j=1 
    else
      j=j+1
    end
    i=int((k-0.1)/3)+1
    mm(i,j)=N(k)
 end       
 disp(mm,'mm')
 Matplot(mm+1)
endfunction

function y=toDecimal(v)
    y = v(1)*2^3 + v(2)*2^2 + v(3)*2 + v(4)
endfunction

function y=TestarEntrada(x, wL, wL1)
    zL1 = wL1 * x;
    aL1 = sigmoid(zL1); //disp(a, 'a');
    zL = wL * aL1;
    y = sigmoid(zL)
endfunction

function y=f(x)
    y = x
endfunction

function s=sigmoid(z)
    s = 1./(1 + exp(-z))
endfunction

function dy=dsigmoid(x)
    d = 0.0000001
    dy = (sigmoid(x+d) - sigmoid(x))/d
endfunction
