function Net()
    N0E1 = [1 1 1...
            1 0 1...
            1 0 1...
            1 0 1...
            1 1 1]
    N0E2 = [0 1 0...
            1 0 1...
            1 0 1...
            1 0 1...
            0 1 0]
    N0E3 = [0 1 0...
            1 1 1...
            1 0 1...
            1 1 1...
            0 1 0]
    N0E4 = [1 1 1...
            1 1 1...
            1 0 1...
            1 1 1...
            1 1 1]
    N0E5 = [1 1 1...
            1 0 1...
            1 0 1...
            1 1 1...
            1 1 1]                                
    N1E1 = [0 1 1...
            1 0 1...
            0 0 1...
            0 0 1...
            0 0 1]
    N1E2 = [1 1 1...
            0 0 1...
            0 0 1...
            0 0 1...
            0 0 1]
    N1E3 = [0 1 1...
            0 0 1...
            0 0 1...
            0 0 1...
            0 0 1]
    N1E4 = [0 0 1...
            0 0 1...
            0 0 1...
            0 0 1...
            0 0 1]
    N1E5 = [0 0 1...
            0 1 1...
            0 0 1...
            0 0 1...
            0 0 1]
    N2E1 = [1 1 1...
            0 0 1...
            1 1 1...
            1 0 0...
            1 1 1]
    N2E2 = [0 1 1...
            0 0 1...
            1 1 1...
            1 0 0...
            1 1 0]
    N2E3 = [0 1 1...
            0 0 1...
            1 1 1...
            1 0 0...
            1 1 1]
    N2E4 = [1 1 1...
            0 0 1...
            1 1 1...
            1 0 0...
            1 1 0]
    N2E5 = [1 1 0...
            0 0 1...
            1 1 1...
            1 0 0...
            0 1 1]
    N2E6 = [1 1 1...
            0 0 1...
            0 1 0...
            1 0 0...
            1 1 1]         
    N2E7 = [1 0 1...
            0 0 1...
            1 1 1...
            1 0 0...
            1 0 1]        
    N2E8 = [1 1 0...
            0 0 1...
            1 1 0...
            0 0 0...
            1 1 1]        
    N2E9 = [1 1 0...
            0 0 1...
            0 1 0...
            1 0 0...
            1 0 1]         
    N2E10 = [1 0 1...
             0 0 1...
             0 1 1...
             1 0 0...
             1 1 0]                                         
    N3E1 = [1 1 1...
            0 0 1...
            1 1 0...
            0 0 1...
            1 1 1]
    N3E2 = [1 1 0...
            0 0 1...
            1 1 1...
            0 0 1...
            1 1 0]
    N3E3 = [1 1 1...
            0 0 1...
            0 1 1...
            0 0 1...
            1 1 1]
    N3E4 = [1 1 1...
            0 0 1...
            1 0 1...
            0 0 1...
            1 1 1]        
    N3E5 = [1 1 1...
            0 0 1...
            1 1 1...
            0 0 1...
            0 1 1]                               
    N4E1 = [1 0 1...
            1 0 1...
            1 1 1...
            0 0 1...
            0 0 1]
    N4E2 = [0 0 0...
            1 0 1...
            1 1 1...
            0 0 1...
            0 0 1]        
    N4E3 = [0 0 0...
            1 0 1...
            1 1 1...
            0 0 1...
            0 0 0]        
    N4E4 = [1 0 1...
            1 0 1...
            0 1 1...
            0 0 1...
            0 0 1]        
    N4E5 = [1 0 1...
            1 0 1...
            0 1 0...
            0 0 1...
            0 0 0]        
    N5E1 = [1 1 1...
            1 0 0...
            1 1 1...
            0 0 1...
            1 1 1]
    N5E2 = [1 1 1...
            1 0 0...
            1 1 0...
            0 0 1...
            1 1 1]        
    N5E3 = [0 1 1...
            1 0 0...
            1 1 0...
            0 0 1...
            1 1 1]        
    N5E4 = [1 1 0...
            1 0 0...
            1 1 1...
            0 0 1...
            0 1 1]        
    N5E5 = [0 1 1...
            1 0 0...
            1 1 1...
            0 0 1...
            1 1 1]        
    N6E1 = [1 1 1...
            1 0 0...
            1 1 1...
            1 0 1...
            1 1 1]
    N6E2 = [1 1 0...
            1 0 0...
            1 1 1...
            1 0 1...
            1 1 1]        
    N6E3 = [1 1 1...
            1 0 0...
            0 1 0...
            1 0 1...
            0 1 0]        
    N6E4 = [0 1 1...
            1 0 0...
            1 1 1...
            1 0 1...
            1 1 1]        
    N6E5 = [0 1 1...
            1 0 0...
            1 0 1...
            0 0 0...
            1 0 1]        
    N7E1 = [1 1 1...
            0 0 1...
            1 1 1...
            0 0 1...
            0 0 1]
    N7E2 = [0 1 1...
            0 0 1...
            1 1 1...
            0 0 1...
            0 0 1]        
    N7E3 = [1 1 0...
            0 0 1...
            1 1 1...
            0 0 1...
            0 0 1]        
    N7E4 = [1 1 1...
            0 0 1...
            1 1 1...
            0 0 1...
            0 0 0]        
    N7E5 = [0 1 1...
            0 0 1...
            1 1 1...
            0 0 1...
            0 0 0]        
    N8E1 = [1 1 1...
            1 0 1...
            1 1 1...
            1 0 1...
            1 1 1]
    N9E1 = [1 1 1...
            1 0 1...
            1 1 1...
            0 0 1...
            1 1 1]
    alpha = 1
    b = 1
    saidas = [0 0 0
              0 0 0
              0 0 0
              0 0 0
              0 0 0
              0 0 1
              0 0 1
              0 0 1
              0 0 1
              0 0 1
              0 1 0
              0 1 0
              0 1 0
              0 1 0
              0 1 0
              0 1 0
              0 1 0
              0 1 0
              0 1 0
              0 1 0
              0 1 1
              0 1 1
              0 1 1
              0 1 1
              0 1 1
              1 0 0
              1 0 0
              1 0 0
              1 0 0
              1 0 0
              1 0 1
              1 0 1
              1 0 1
              1 0 1
              1 0 1
              1 1 0
              1 1 0
              1 1 0
              1 1 0
              1 1 0
              1 1 1
              1 1 1
              1 1 1
              1 1 1
              1 1 1]
    entradas = [N0E1 b;
                N0E2 b;
                N0E3 b;
                N0E4 b;
                N0E5 b;
                N1E1 b;
                N1E2 b;
                N1E3 b;
                N1E4 b;
                N1E5 b;
                N2E1 b;
                N2E2 b;
                N2E3 b;
                N2E4 b;
                N2E5 b;
                N2E6 b;
                N2E7 b;
                N2E8 b;
                N2E9 b;
                N2E10 b;
                N3E1 b;
                N3E2 b;
                N3E3 b;
                N3E4 b;
                N3E5 b;
                N4E1 b;
                N4E2 b;
                N4E3 b;
                N4E4 b;
                N4E5 b;
                N5E1 b;
                N5E2 b;
                N5E3 b;
                N5E4 b;
                N5E5 b;
                N6E1 b;
                N6E2 b;
                N6E3 b;
                N6E4 b;
                N6E5 b;
                N7E1 b;
                N7E2 b;
                N7E3 b;
                N7E4 b;
                N7E5 b;]
    vw1 = ones(1, 16)
    vw2 = ones(1, 16)
    vw3 = ones(1, 16)
    e = []
    for treinos=1:100
        for i=1:size(entradas)(1)
            for j=1:1000
                x = entradas(i, 1:$); //disp(x, 'x')
                yt = saidas(i, 1:$)'; //disp(yt, 'yt')
                z = [x zeros(x) zeros(x); zeros(x) x zeros(x); zeros(x) zeros(x) x] * [vw1'; vw2'; vw3'];// disp(z, "z")
                a = sigmoid(z); //disp(a, 'a'); disp(yt, 'yt')
                erro = (a - yt).^2;// disp(erro, "erro")
                derro = 2 * (a - yt)
                e = [e, sum(erro)]
                gw1 = derro(1) * dsigmoid(z(1)) * x
                gw2 = derro(2) * dsigmoid(z(2)) * x
                gw3 = derro(3) * dsigmoid(z(3)) * x
                //gb = erro * sigmoid(z)
                g = [gw1, gw2, gw3];// disp(g, 'g')
                ng = norm(g)
                if ng==0 break end;//disp(ng, 'ng')
                gw1 = gw1/ng
                gw2 = gw2/ng
                gw3 = gw3/ng
                //gb = gb/ng
                vw1 = vw1 - alpha * gw1
                vw2 = vw2 - alpha * gw2
                vw3 = vw3 - alpha * gw3
                //b = b - gb
            end
            //disp(a, "final do treino")
        end
    end
    N0 = [1 0 1...
          1 0 1...
          0 0 0...
          1 0 1...
          1 0 1 b]
    N1 = [0 0 1...
          0 1 1...
          1 0 1...
          0 0 1...
          0 0 1 b]
    N2 = [1 1 1...
          0 1 1...
          1 1 1...
          1 0 0...
          1 1 1 b]
    N3 = [1 1 0...
          0 0 1...
          1 1 0...
          0 0 1...
          1 1 1 b]
    N4 = [1 0 0...
          1 0 1...
          1 1 1...
          0 0 0...
          0 0 1 b]
    N5 = [1 0 1...
          1 0 0...
          1 1 1...
          0 0 1...
          1 0 1 b]
    N6 = [0 1 1...
          1 0 0...
          1 1 1...
          1 0 1...
          1 1 1 b]
    N7 = [0 1 1...
          0 0 1...
          1 1 1...
          0 0 1...
          0 0 1 b]
    N0y = [0 0 0]
    N1y = [0 0 1]
    N2y = [0 1 0]
    N3y = [0 1 1]
    N4y = [1 0 0]
    N5y = [1 0 1]
    N6y = [1 1 0]
    N7y = [1 1 1]
    y = TestarEntrada(N0, vw1, vw2, vw3)
    disp(N0(1:15), "Numero zero")
    disp(y', "O que reconheceu")
    if sum(y'-N0y) < 1E-10 then
        disp("Ah miseravih")
    else
        disp("Errou, Errou feio, Errou rude")
    end
    y = TestarEntrada(N1, vw1, vw2, vw3)
    disp(N1(1:15), "Numero um")
    disp(y', "O que reconheceu")
    if sum(y'-N1y) < 1E-10 then
        disp("Ah miseravih")
    else
        disp("Errou, Errou feio, Errou rude")
    end
    y = TestarEntrada(N2, vw1, vw2, vw3)
    disp(N2(1:15), "Numero dois")
    disp(y', "O que reconheceu")
    if sum(y'-N2y) < 1E-10 then
        disp("Ah miseravih")
    else
        disp("Errou, Errou feio, Errou rude")
    end
    y = TestarEntrada(N3, vw1, vw2, vw3)
    disp(N3(1:15), "Numero tres")
    disp(y', "O que reconheceu")
    if sum(y'-N3y) < 1E-10 then
        disp("Ah miseravih")
    else
        disp("Errou, Errou feio, Errou rude")
    end
    y = TestarEntrada(N4, vw1, vw2, vw3)
    disp(N4(1:15), "Numero quatro")
    disp(y', "O que reconheceu")
    if sum(y'-N4y) < 1E-10 then
        disp("Ah miseravih")
    end
    y = TestarEntrada(N5, vw1, vw2, vw3)
    disp(N5(1:15), "Numero cinco")
    disp(y', "O que reconheceu")
    if sum(y'-N5y) < 1E-10 then
        disp("Ah miseravih")
    else
        disp("Errou, Errou feio, Errou rude")
    end
    y = TestarEntrada(N6, vw1, vw2, vw3)
    disp(N6(1:15), "Numero seis")
    disp(y', "O que reconheceu")
    if sum(y'-N6y) < 1E-10 then
        disp("Ah miseravih")
    else
        disp("Errou, Errou feio, Errou rude")
    end
    y = TestarEntrada(N7, vw1, vw2, vw3)
    disp(N7(1:15), "Numero sete")
    disp(y', "O que reconheceu")
    if sum(y'-N7y) < 1E-10 then
        disp("Ah miseravih")
    else
        disp("Errou, Errou feio, Errou rude")
    end
    plot(e)
endfunction


function y=TestarEntrada(x, w1, w2, w3)
    z = [x zeros(x) zeros(x); zeros(x) x zeros(x); zeros(x) zeros(x) x] * [w1'; w2'; w3']
    y = sigmoid(z)
endfunction

function y=f(x)
    y = x
endfunction

function s=sigmoid(z)
    s = 1./(1 + exp(-z))
endfunction

function dy=dsigmoid(x)
    d = 0.0000001
    dy = (sigmoid(x+d) - sigmoid(x))/d
endfunction
